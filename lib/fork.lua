--
-- Copyright (C) 2023 Masatoshi Fukunaga
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy
-- of this software and associated documentation files (the "Software"), to deal
-- in the Software without restriction, including without limitation the rights
-- to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-- copies of the Software, and to permit persons to whom the Software is
-- furnished to do so, subject to the following conditions:
--
-- The above copyright notice and this permission notice shall be included in
-- all copies or substantial portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-- FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
-- AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-- LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-- OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
-- THE SOFTWARE.
--
--- @class fork.process.stat
--- @field pid integer process id
--- @field exit integer value of WEXITSTATUS(wstatus) if WIFEXITED is true
--- @field sigterm integer value of WTERMSIG(wstatus) if WIFSIGNALED is true
--- @field sigstop integer value of WSTOPSIG(wstatus) if WIFSTOPPED is true
--- @field sigcont integer value of WSTOPSIG(wstatus) if WIFCONTINUED is true
---
--- @class fork.process
--- @field is_child fun(self):boolean
--- @field pid fun(self):integer
--- @field wait fun(self, ...):(res:fork.process.stat, err:any, again:boolean)
--- @field kill fun(self, signo?:integer, ...:any):(res:fork.process.stat, err:any, again:boolean)
---
return require('fork')
